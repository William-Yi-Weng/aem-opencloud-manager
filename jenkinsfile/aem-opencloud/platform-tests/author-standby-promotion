@Library('aem-opencloud') _

pipeline {
    agent any
    environment {
        TMPDIR = "/tmp/shinesolutions/jenkins"
        OC_CONFIG_DIR = "${env.TMPDIR}/opencloud_config"
    }
    parameters {
        string(name: 'AOC_AEM_TEST_SUITE_CONFIG_PROFILE', defaultValue: '', description: 'Name of the config profile for AEM Test Suite')
        string(name: 'AOC_STACK_MANAGER_CONFIG_PROFILE', defaultValue: '', description: 'Name of the config profile for AEM Stack Manager')
        string(name: 'AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE', defaultValue: '', description: 'Name of the config profile for the AEM OpenCloud Stack Manager Messenger')
        string(name: 'PACKAGE_DESCRIPTOR_FILE', defaultValue: 'deploy-artifacts-descriptor.json', description: 'Name of the descriptor file to deploy on the target AEM Stack')

        string(name: 'STACK_MANAGER_PREFIX', defaultValue: '', description: 'AEM OpenCloud Stack Manager prefix.')
        string(name: 'STACK_PREFIX', defaultValue: '', description: 'AEM OpenCloud Stack prefix.')
        string(name: 'VERSION_AEM_AWS_STACK_BUILDER', defaultValue: '3.3.1', description: 'Version of aem-aws-stack-builder repo to archive')
        string(name: 'VERSION_AEM_STACK_MANAGER_MESSENGER', defaultValue: '2.0.0', description: 'Version of aem-stack-manager-messenger repo')
        string(name: 'VERSION_AEM_TEST_SUITE', defaultValue: '0.9.10', description: 'Version of aem-test-suite repo to archive')
    }
    stages {
        stage('Setup') {
            steps {
                // Setup Jenkins environment
                SetupEnv this
                // Running global prerun-script
                JenkinsGlobalJobPreScript this
            }
        }
        stage('Prepare artifacts') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Prepare repositories
                    AwsPrepareRepo(this, "aem-aws-stack-builder", params.VERSION_AEM_AWS_STACK_BUILDER, params.AWS_REPOSITORY_PATH, env.TMPDIR)
                    AwsPrepareRepo(this, "aem-test-suite", params.VERSION_AEM_TEST_SUITE, params.AWS_REPOSITORY_PATH, env.TMPDIR)
                    AwsPrepareRepo(this, "aem-stack-manager-messenger", params.VERSION_AEM_STACK_MANAGER_MESSENGER, params.AWS_REPOSITORY_PATH, env.TMPDIR)
                }
            }
        }
        stage('Resolve dependencies') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Resolve dependencies
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make deps")
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make deps")
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make deps")
                }
            }
        }
        stage('Prepare configuration') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Create aem-aws-stack-builder configuration
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make config config_path=${env.OC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/")
                }
            }
        }
        stage('Create AEM OpenCloud Stack') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Create AEM OpenCloud Full-Set Stack
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make create-full-set config_path=${env.OC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.STACK_PREFIX}")
                    // Create AEM OpenCloud Stack Manager
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make create-stack-manager config_path=${env.OC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_STACK_MANAGER_CONFIG_PROFILE}/ stack_prefix=${params.STACK_MANAGER_PREFIX}")
                    // Check readiness of created Full-Set
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make check-readiness-full-set stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.STACK_PREFIX} config_path=${env.OC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
                }
            }
        }
        stage('Run acceptance test') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make test-acceptance-full-set config_path=${env.OC_CONFIG_DIR}/aem-test-suite/${params.AOC_AEM_TEST_SUITE_CONFIG_PROFILE} stack_prefix=${params.STACK_PREFIX}")
                }
            }
        }
        //
        // This stage is still under construction as this feature to
        // terminate the author-primary is not yet implemented
        //
        stage('Terminate Author Primary') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Terminate Author-Primary
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make terminate-author-primary config_path=${env.OC_CONFIG_DIR}/aem-test-suite/${params.AOC_AEM_TEST_SUITE_CONFIG_PROFILE} stack_prefix=${params.STACK_PREFIX}")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Promote Author Standby to Author Primary') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Promote Author-Standby to Author-Primary
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make promote-author stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.STACK_PREFIX} config_path=${env.OC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Run offline-compaction-snapshot') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Run Offline Compaction Snapshot
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make offline-compaction-snapshot-full-set stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.STACK_PREFIX} config_path=${env.OC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
                }
            }
        }
        stage('Check Full-Set readiness') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Check Full-Set Readiness
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make check-readiness-full-set stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.STACK_PREFIX} config_path=${env.OC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
                }
            }
        }
        stage('Delete AEM OpenCloud Stacks') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Delete AEM OpenCloud Full-Set Stack
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make delete-full-set config_path=${env.OC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.STACK_PREFIX}")
                    // Delete AEM OpenCloud Stack Manager
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make delete-stack-manager config_path=${env.OC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_STACK_MANAGER_CONFIG_PROFILE}/ stack_prefix=${params.STACK_MANAGER_PREFIX}")
                    }
                }
                post {
                    always {
                      // Running stage post-script
                      JenkinsStageJobPostScript this
                }
            }
        }
    }
    post {
        always {
            // Running global post-script
            JenkinsGlobalJobPostScript this
        }
    }
}
