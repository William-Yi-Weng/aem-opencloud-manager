@Library('aem-opencloud-manager') _

pipeline {
    agent {
        docker { image 'shinesolutions/aem-platform-buildenv-publisher:latest' }
    }
    environment {
        TMPDIR = "/tmp/shinesolutions/aem-opencloud-manager"
        AOC_CONFIG_DIR = "${env.TMPDIR}/opencloud_config"
    }
    parameters {
        string(name: 'AOC_CONFIG_PROFILE', defaultValue: '', description: 'Name of the config profile for AEM Test Suite')
        string(name: 'AOC_AEM_TEST_SUITE_CONFIG_PROFILE', defaultValue: '', description: 'Name of the config profile for AEM Test Suite')
        string(name: 'AOC_STACK_MANAGER_CONFIG_PROFILE', defaultValue: '', description: 'Name of the config profile for AEM Stack Manager')
        string(name: 'AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE', defaultValue: '', description: 'Name of the config profile for the AEM OpenCloud Stack Manager Messenger')

        string(name: 'STACK_MANAGER_PREFIX', defaultValue: 'BG-FS-SM-TEST', description: 'AEM OpenCloud Stack Manager prefix.')
        string(name: 'BLUE_STACK_PREFIX', defaultValue: 'BLUE-FS-TEST', description: 'AEM OpenCloud Stack prefix.')
        string(name: 'GREEN_STACK_PREFIX', defaultValue: 'GREEN-FS-TEST', description: 'AEM OpenCloud Stack prefix.')
        string(name: 'VERSION_AEM_AWS_STACK_BUILDER', defaultValue: '3.3.1', description: 'Version of aem-aws-stack-builder repo to archive')
        string(name: 'VERSION_AEM_STACK_MANAGER_MESSENGER', defaultValue: '2.0.0', description: 'Version of aem-stack-manager-messenger repo')
        string(name: 'VERSION_AEM_TEST_SUITE', defaultValue: '0.9.10', description: 'Version of aem-test-suite repo to archive')
    }
    stages {
        stage('Setup') {
            steps {
                // Setup Jenkins environment
                SetupEnv this
                // Running global prerun-script
                JenkinsGlobalJobPreScript this
            }
        }
        stage('Prepare artifacts') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Prepare repositories
                    AwsPrepareRepo(this, "aem-aws-stack-builder", params.VERSION_AEM_AWS_STACK_BUILDER, params.AWS_LIBRARY_PATH, env.TMPDIR)
                    AwsPrepareRepo(this, "aem-test-suite", params.VERSION_AEM_TEST_SUITE, params.AWS_LIBRARY_PATH, env.TMPDIR)
                    AwsPrepareRepo(this, "aem-stack-manager-messenger", params.VERSION_AEM_STACK_MANAGER_MESSENGER, params.AWS_LIBRARY_PATH, env.TMPDIR)
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Resolve dependencies') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Resolve dependencies
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make deps")
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make deps")
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make deps")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Prepare configuration') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Create aem-aws-stack-builder configuration
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make config config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Create AEM OpenCloud Blue Stacks') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Create AEM OpenCloud Full-Set Stack
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make create-full-set config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.BLUE_STACK_PREFIX}")
                    // Create AEM OpenCloud Stack Manager
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make create-stack-manager config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_STACK_MANAGER_CONFIG_PROFILE}/ stack_prefix=${params.STACK_MANAGER_PREFIX}")
                    // Check readiness of created Full-Set
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make check-readiness-full-set stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.BLUE_STACK_PREFIX} config_path=${env.AOC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Run Full-Set acceptance test') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Run acceptance test
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make test-acceptance-full-set config_path=${env.AOC_CONFIG_DIR}/aem-test-suite/${params.AOC_AEM_TEST_SUITE_CONFIG_PROFILE}/ stack_prefix=${params.BLUE_STACK_PREFIX}")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Run SM-Event offline-compaction-snapshot') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Trigger offline-compaction-snapshot for Full-Set
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make offline-compaction-snapshot-full-set stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.BLUE_STACK_PREFIX} config_path=${env.AOC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
                    // Check full-set readiness after offline-compaction-snapshots were taken
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make check-readiness-full-set stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.BLUE_STACK_PREFIX} config_path=${env.AOC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        //
        // Stage under construction as feature to get latest offline-snapshot
        // for specific stack is not integrated yet
        stage('Save snapshot ids') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Get Snapshot IDs
                }
                post {
                    always {
                      // Running stage post-script
                      JenkinsStageJobPostScript this
                    }
                }
            }
        }
        stage('Create AEM OpenCloud green Stacks') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Create AEM OpenCloud Full-Set Stack
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make create-full-set config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.GREEN_STACK_PREFIX}")
                    // Check readiness of created Full-Set
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make check-readiness-full-set stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.GREEN_STACK_PREFIX} config_path=${env.AOC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Run Full-Set acceptance test') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Run acceptance test
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make test-acceptance-full-set config_path=${env.AOC_CONFIG_DIR}/aem-test-suite/${params.AOC_AEM_TEST_SUITE_CONFIG_PROFILE}/ stack_prefix=${params.GREEN_STACK_PREFIX}")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Delete AEM OpenCloud Blue & Green Stacks') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Delete AEM OpenCloud Full-Set Stack
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make delete-full-set config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.BLUE_STACK_PREFIX}")
                    // Delete AEM OpenCloud Full-Set Stack
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make delete-full-set config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.GREEN_STACK_PREFIX}")
                    // Delete AEM OpenCloud Stack Manager
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make delete-stack-manager config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.AOC_STACK_MANAGER_CONFIG_PROFILE}")
                    }
                }
                post {
                    always {
                      // Running stage post-script
                      JenkinsStageJobPostScript this
                }
            }
        }
    }
    post {
        always {
            // Running global post-script
            JenkinsGlobalJobPostScript this
        }
    }
}
