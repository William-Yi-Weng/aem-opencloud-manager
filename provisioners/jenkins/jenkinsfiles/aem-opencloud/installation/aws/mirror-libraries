@Library('aem-opencloud-manager') _

pipeline {
    agent {
        docker { image 'shinesolutions/aem-platform-buildenv-publisher:latest' }
    }
    environment {
        TMPDIR = "/tmp/shinesolutions/aem-opencloud-manager"
        AOC_CONFIG_DIR = "${env.TMPDIR}/aem-opencloud-config"
    }
    parameters {

        string(name: 'VERSION_PACKER_AEM', defaultValue: '3.4.2', description: 'Version of packer-aem repo to archive')
        string(name: 'VERSION_AEM_AWS_STACK_BUILDER', defaultValue: '3.3.1', description: 'Version of aem-aws-stack-builder repo to archive')
        string(name: 'VERSION_AOC_CONFIG', defaultValue: '1.0.0', description: 'Version of the AEM OpenCloud configuration repository to archive.')
        string(name: 'VERSION_AEM_STACK_MANAGER_MESSENGER', defaultValue: '2.0.0', description: 'Version of aem-stack-manager-messenger repo to archive')
        string(name: 'VERSION_AEM_TEST_SUITE', defaultValue: '0.9.10', description: 'Version of aem-test-suite repo to archive')
    }
    stages {
        stage('Setup') {
            steps {
                JenkinsInit(this, params.AOC_CUSTOM_MANAGER_STEPS_ARTIFACT_URL, env.TMPDIR)
                JenkinsPipelinePreStep this
            }
        }
        stage('Mirror AEM OpenCloud Libraries') {
            steps {
                JenkinsStagePreStep this
                AocMirrorGithubLibrary(this, "shinesolutions", "packer-aem", params.VERSION_PACKER_AEM, params.AWS_LIBRARY_S3_BUCKET, params.AWS_LIBRARY_S3_PATH, env.TMPDIR)
                AocMirrorGithubLibrary(this, "shinesolutions", "aem-aws-stack-builder", params.VERSION_AEM_AWS_STACK_BUILDER, params.AWS_LIBRARY_S3_BUCKET, params.AWS_LIBRARY_S3_PATH, env.TMPDIR)
                AocMirrorGithubLibrary(this, "shinesolutions", "aem-stack-manager-messenger", params.VERSION_AEM_STACK_MANAGER_MESSENGER, params.AWS_LIBRARY_S3_BUCKET, params.AWS_LIBRARY_S3_PATH, env.TMPDIR)
                AocMirrorGithubLibrary(this, "shinesolutions", "aem-test-suite", params.VERSION_AEM_TEST_SUITE, params.AWS_LIBRARY_S3_BUCKET, params.AWS_LIBRARY_S3_PATH, env.TMPDIR)
            }
            post {
                always {
                  JenkinsStagePostStep this
                }
            }
        }
        stage('Prepare artifacts') {
            steps {
                JenkinsStagePreStep this
                AocPrepareLibrary(this, "aem-aws-stack-builder", params.VERSION_AEM_AWS_STACK_BUILDER, params.AWS_LIBRARY_S3_BUCKET, params.AWS_LIBRARY_S3_PATH, env.TMPDIR)
                AocPrepareConfig(this, params.AOC_CONFIG_ARTIFACT_URL, env.TMPDIR)
            }
            post {
                always {
                  JenkinsStagePostStep this
                }
            }
        }
        stage('Mirror AEM OpenCloud AEM AWS Stack Builder Libraries') {
            steps {
                JenkinsStagePreStep this
                ExecCommand(this, env.TMPDIR, "aem-aws-stack-builder", "make library config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/")
            }
            post {
                always {
                  JenkinsStagePostStep this
                }
            }
        }
    }
    post {
        always {
          JenkinsPipelinePostStep this
        }
    }
}
