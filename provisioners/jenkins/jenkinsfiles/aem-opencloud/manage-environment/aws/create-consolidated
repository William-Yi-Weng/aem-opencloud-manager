@Library('aem-opencloud-manager') _

pipeline {
    agent {
        docker { image 'shinesolutions/aem-platform-buildenv-publisher:latest' }
    }
    environment {
        TMPDIR = "/tmp/shinesolutions/aem-opencloud-manager"
        AOC_CONFIG_DIR = "${env.TMPDIR}/opencloud_config"
    }
    parameters {
        string(name: 'AOC_AEM_TEST_SUITE_CONFIG_PROFILE', defaultValue: '', description: 'Name of the config profile for AEM Test Suite')
        string(name: 'AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE', defaultValue: '', description: 'Name of the config profile for the AEM OpenCloud Stack Manager Messenger')
        string(name: 'PACKAGE_DESCRIPTOR_FILE', defaultValue: 'deploy-artifacts-descriptor.json', description: 'Name of the descriptor file to deploy on the target AEM Stack')

        string(name: 'STACK_MANAGER_PREFIX', defaultValue: '', description: 'AEM OpenCloud Stack Manager prefix.')
        string(name: 'STACK_PREFIX', defaultValue: '', description: 'AEM OpenCloud Stack prefix.')
        string(name: 'VERSION_AEM_AWS_STACK_BUILDER', defaultValue: '3.3.1', description: 'Version of aem-aws-stack-builder repo to archive')
        string(name: 'VERSION_AEM_STACK_MANAGER_MESSENGER', defaultValue: '2.0.0', description: 'Version of aem-stack-manager-messenger repo')
        string(name: 'VERSION_AEM_TEST_SUITE', defaultValue: '0.9.10', description: 'Version of aem-test-suite repo to archive')
    }
    stages {
        stage('Setup') {
            steps {
                // Setup Jenkins environment
                SetupEnv this
                // Running global prerun-script
                JenkinsGlobalJobPreScript this
            }
        }
        stage('Prepare artifacts') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Prepare repositories
                    AwsPrepareRepo(this, "aem-aws-stack-builder", params.VERSION_AEM_AWS_STACK_BUILDER, params.AWS_LIBRARY_PATH, env.TMPDIR)
                    AwsPrepareRepo(this, "aem-stack-manager-messenger", params.VERSION_AEM_STACK_MANAGER_MESSENGER, params.AWS_LIBRARY_PATH, env.TMPDIR)
                    AwsPrepareRepo(this, "aem-test-suite", params.VERSION_AEM_TEST_SUITE, params.AWS_LIBRARY_PATH, env.TMPDIR)
                    // Prepare AEM OpenCloud configuration
                    AocPrepareConfig(this, params.AOC_CONFIG_REPO_URL, env.TMPDIR)
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Resolve dependencies') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Resolve dependencies
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make deps")
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make deps")
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make deps")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Prepare configuration') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Create aem-aws-stack-builder configuration
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make config config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/")
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make config-aem-aws config_path=${env.AOC_CONFIG_DIR}/aem-test-suite/${params.AOC_AEM_TEST_SUITE_CONFIG_PROFILE}/")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Create AEM OpenCloud Stack') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Create AEM OpenCloud Consolidated Stack
                    RunMake(this, env.TMPDIR, "aem-aws-stack-builder", "make create-consolidated config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.STACK_PREFIX}")
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make check-readiness-consolidated stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.STACK_PREFIX} config_path=${env.AOC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Run acceptance test') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Run acceptance test
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make test-acceptance-author-primary stack_prefix=${params.STACK_PREFIX}")
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make test-acceptance-publish stack_prefix=${params.STACK_PREFIX}")
                    RunMake(this, env.TMPDIR, "aem-test-suite", "make test-acceptance-publish-dispatcher stack_prefix=${params.STACK_PREFIX}")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Deploy deployment-descriptor') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Run stack manager event
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make deploy-artifacts-consolidated stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.STACK_PREFIX} config_path=${env.AOC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/ descriptor_file=${params.PACKAGE_DESCRIPTOR_FILE}")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Flush dispatcher Cache') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Run stack manager event
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make flush-dispatcher-cache stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.STACK_PREFIX} config_path=${env.AOC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/ component=author-publish-dispatcher")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
        stage('Check consolidated readiness') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStageJobPreScript this
                    // Run stack manager event
                    RunMake(this, env.TMPDIR, "aem-stack-manager-messenger", "make check-readiness-consolidated stack_prefix=${params.STACK_MANAGER_PREFIX} target_aem_stack_prefix=${params.STACK_PREFIX} config_path=${env.AOC_CONFIG_DIR}/aem-stack-manager-messenger/${params.AOC_STACK_MANAGER_MESSENGER_CONFIG_PROFILE}/")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStageJobPostScript this
                }
            }
        }
    }
    post {
        always {
          // Running global post-script
          JenkinsGlobalJobPostScript this
        }
    }
}
