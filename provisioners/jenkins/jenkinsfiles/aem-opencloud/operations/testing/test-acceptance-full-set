@Library('aem-opencloud-manager') _

pipeline {
    agent {
        docker { image 'shinesolutions/aem-platform-buildenv-publisher:latest' }
    }
    environment {
        TMPDIR = "/tmp/shinesolutions/aem-opencloud-manager"
        AOC_CONFIG_DIR = "${env.TMPDIR}/aem-opencloud-config"
    }
    parameters {
        string(name: 'REALM', defaultValue: 'nonprod', description: 'Evnironment realm for configuration path')

        string(name: 'STACK_PREFIX', defaultValue: '', description: 'AEM OpenCloud Stack prefix.')
        string(name: 'VERSION_AEM_TEST_SUITE', defaultValue: '0.9.10', description: 'Version of aem-test-suite repo to archive')
    }
    stages {
        stage('Setup') {
            steps {
                // Setup Jenkins environment
                JenkinsInit(this, params.AOC_CUSTOM_MANAGER_STEPS_REPO_URL, env.TMPDIR)
                // Running global prerun-script
                JenkinsPipelinePreStep this
            }
        }
        stage('Prepare artifacts') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStagePreStep this
                    // Prepare repositories
                    AocPrepareLibrary(this, "aem-test-suite", params.VERSION_AEM_TEST_SUITE, params.AWS_LIBRARY_S3_BUCKET, AWS_LIBRARY_S3_PATH, env.TMPDIR)
            }
            post {
                always {
                    // Running stage post-script
                    JenkinsStagePostStep this
                }
            }
        }
        stage('Resolve dependencies') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStagePreStep this
                    // Resolve dependencies
                    ExecCommand(this, env.TMPDIR, "aem-test-suite", "make deps")
            }
            post {
                always {
                    // Running stage post-script
                    JenkinsStagePostStep this
                }
            }
        }
        stage('Trigger Test') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStagePreStep this
                    // Trigger Test
                    ExecCommand(this, env.TMPDIR, "aem-test-suite", "make test-acceptance-full-set config_path={} stack_prefix=${params.STACK_PREFIX}")
            }
            post {
                always {
                    // Running stage post-script
                    JenkinsStagePostStep this
                }
            }
        }
    }
    post {
        always {
            // Running global post-script
            JenkinsPipelinePostStep this
        }
    }
}
