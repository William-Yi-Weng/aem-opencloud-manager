@Library('aem-opencloud-manager') _

def configString = libraryResource 'aem_opencloud/config.json'
def config = readJSON text: configString

pipeline {
    agent {
        docker { image 'shinesolutions/aem-platform-buildenv-publisher:latest' }
    }
    environment {
        TMPDIR = "/tmp/shinesolutions/aem-opencloud-manager"
        AOC_CONFIG_DIR = "${env.TMPDIR}/aem-opencloud-config"
    }
    parameters {

        string(name: 'STACK_PREFIX', defaultValue: '', description: 'AEM OpenCloud Stack prefix.')
        string(name: 'AOC_VERSION_AEM_AWS_STACK_BUILDER', defaultValue: config.library.aem_aws_stack_builder, description: 'Version of aem-aws-stack-builder repo to archive')
    }
    stages {
        stage('Initialise Jenkins pipeline') {
            steps {
                // Setup Jenkins environment
                JenkinsInit(this, params.AOC_CUSTOM_MANAGER_STEPS_ARTIFACT_URL, env.TMPDIR)
                // Running global prerun-script
                JenkinsPipelinePreStep this
            }
        }
        stage('Prepare AEM OpenCloud libraries and configuration') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStagePreStep this
                    // Prepare repositories
                    AocPrepareLibrary(this, "aem-aws-stack-builder", params.AOC_VERSION_AEM_AWS_STACK_BUILDER, params.AWS_LIBRARY_S3_BUCKET, AWS_LIBRARY_S3_PATH, env.TMPDIR)
                }
            }
        }
        stage('Resolve dependencies') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStagePreStep this
                    // Resolve dependencies
                    ExecCommand(this, env.TMPDIR, "aem-aws-stack-builder", "make deps")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStagePostStep this
                }
            }
        }
        stage('Prepare library configuration') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStagePreStep this
                    // Create AEM Nat Gateway Stack
                    ExecCommand(this, env.TMPDIR, "aem-aws-stack-builder", "make config config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStagePostStep this
                }
            }
        }
        stage('Create AEM OpenCloud Stack') {
            steps {

                    // Running Stage Prerun-Script
                    JenkinsStagePreStep this
                    // Create AEM OpenCloud Bastion Stack
                    ExecCommand(this, env.TMPDIR, "aem-aws-stack-builder", "make create-bastion config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.STACK_PREFIX}")
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStagePostStep this
            }
            post {
                always {
                  // Running stage post-script
                  JenkinsStagePostStep this
                }
            }
        }
    }
    post {
        always {
          // Running global post-script
          JenkinsPipelinePostStep this
        }
    }
}
