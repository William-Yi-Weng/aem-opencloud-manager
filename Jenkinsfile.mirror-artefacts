@Library("aem") _

pipeline {
    agent any
    parameters {
        string(name: 'VERSION_PACKER_AEM', defaultValue: '3.4.2', description: 'Version of packer-aem repo to archive')
        string(name: 'VERSION_AEM_AWS_STACK_BUILDER', defaultValue: '3.3.1', description: 'Version of aem-aws-stack-builder repo to archive')
        string(name: 'VERSION_AEM_STACK_MANAGER_MESSENGER', defaultValue: '2.0.0', description: 'Version of aem-stack-manager-messenger repo to archive')
        string(name: 'VERSION_AEM_TEST_SUITE', defaultValue: '0.9.10', description: 'Version of aem-test-suite repo to archive')
        string(name: 'S3_ENDPOINT', defaultValue: 'aem-opencloud/library-kai', description: 'S3 Endpoint where we stored the artefacts.')
    }
    stages {
        stage('Setup') {
            steps {
                SetupEnv this
            }
        }
        stage('Mirror') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aem']]) {
                    MirrorRepo(this, params.S3_ENDPOINT, "packer-aem", params.VERSION_PACKER_AEM)
                    MirrorRepo(this, params.S3_ENDPOINT, "aem-aws-stack-builder", params.VERSION_AEM_AWS_STACK_BUILDER)
                    MirrorRepo(this, params.S3_ENDPOINT, "aem-stack-manager-messenger", params.VERSION_AEM_STACK_MANAGER_MESSENGER)
                    MirrorRepo(this, params.S3_ENDPOINT, "aem-test-suite", params.VERSION_AEM_TEST_SUITE)
                }
            }
        }
    }
}
